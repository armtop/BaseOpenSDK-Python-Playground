# Code generated by Lark OpenAPI.

import io
from typing import *
from typing import IO
from baseopensdk.core.const import UTF_8, CONTENT_TYPE
from baseopensdk.core import JSON
from baseopensdk.core.token import verify
from baseopensdk.core.http import Transport
from baseopensdk.core.model import Config, RequestOption, RawResponse
from baseopensdk.core.utils import Files
from requests_toolbelt import MultipartEncoder
from baseopensdk.api.drive.v1.model.create_import_task_request import CreateImportTaskRequest
from baseopensdk.api.drive.v1.model.create_import_task_response import CreateImportTaskResponse
from baseopensdk.api.drive.v1.model.get_import_task_request import GetImportTaskRequest
from baseopensdk.api.drive.v1.model.get_import_task_response import GetImportTaskResponse


class ImportTask(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateImportTaskRequest, option: RequestOption = RequestOption()) -> CreateImportTaskResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: CreateImportTaskResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateImportTaskResponse)
        response.raw = resp

        return response

    def get(self, request: GetImportTaskRequest, option: RequestOption = RequestOption()) -> GetImportTaskResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: GetImportTaskResponse = JSON.unmarshal(str(resp.content, UTF_8), GetImportTaskResponse)
        response.raw = resp

        return response

    
