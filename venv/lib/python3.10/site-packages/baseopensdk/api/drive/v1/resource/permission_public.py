# Code generated by Lark OpenAPI.

import io
from typing import *
from typing import IO
from baseopensdk.core.const import UTF_8, CONTENT_TYPE
from baseopensdk.core import JSON
from baseopensdk.core.token import verify
from baseopensdk.core.http import Transport
from baseopensdk.core.model import Config, RequestOption, RawResponse
from baseopensdk.core.utils import Files
from requests_toolbelt import MultipartEncoder
from baseopensdk.api.drive.v1.model.get_permission_public_request import GetPermissionPublicRequest
from baseopensdk.api.drive.v1.model.get_permission_public_response import GetPermissionPublicResponse
from baseopensdk.api.drive.v1.model.patch_permission_public_request import PatchPermissionPublicRequest
from baseopensdk.api.drive.v1.model.patch_permission_public_response import PatchPermissionPublicResponse


class PermissionPublic(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def get(self, request: GetPermissionPublicRequest, option: RequestOption = RequestOption()) -> GetPermissionPublicResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: GetPermissionPublicResponse = JSON.unmarshal(str(resp.content, UTF_8), GetPermissionPublicResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchPermissionPublicRequest, option: RequestOption = RequestOption()) -> PatchPermissionPublicResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: PatchPermissionPublicResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchPermissionPublicResponse)
        response.raw = resp

        return response

    
