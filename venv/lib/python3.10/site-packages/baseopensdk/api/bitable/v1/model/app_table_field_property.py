# Code generated by Lark OpenAPI.

from typing import *
from typing import IO
from baseopensdk.core.construct import init
from .app_table_field_property_option import AppTableFieldPropertyOption
from .app_field_property_auto_serial import AppFieldPropertyAutoSerial
from .app_field_property_location import AppFieldPropertyLocation


class AppTableFieldProperty(object):
    _types = {
        "options": List[AppTableFieldPropertyOption],
        "formatter": str,
        "date_formatter": str,
        "auto_fill": bool,
        "multiple": bool,
        "table_id": str,
        "table_name": str,
        "back_field_name": str,
        "auto_serial": AppFieldPropertyAutoSerial,
        "location": AppFieldPropertyLocation,
        "formula_expression": str,
    }

    def __init__(self, d):
        self.options: Optional[List[AppTableFieldPropertyOption]] = None
        self.formatter: Optional[str] = None
        self.date_formatter: Optional[str] = None
        self.auto_fill: Optional[bool] = None
        self.multiple: Optional[bool] = None
        self.table_id: Optional[str] = None
        self.table_name: Optional[str] = None
        self.back_field_name: Optional[str] = None
        self.auto_serial: Optional[AppFieldPropertyAutoSerial] = None
        self.location: Optional[AppFieldPropertyLocation] = None
        self.formula_expression: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AppTableFieldPropertyBuilder":
        return AppTableFieldPropertyBuilder()


class AppTableFieldPropertyBuilder(object):
    def __init__(self, app_table_field_property: AppTableFieldProperty = AppTableFieldProperty({})) -> None:
        self._app_table_field_property: AppTableFieldProperty = app_table_field_property
    
    def options(self, options: List[AppTableFieldPropertyOption]) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.options = options
        return self
    
    def formatter(self, formatter: str) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.formatter = formatter
        return self
    
    def date_formatter(self, date_formatter: str) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.date_formatter = date_formatter
        return self
    
    def auto_fill(self, auto_fill: bool) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.auto_fill = auto_fill
        return self
    
    def multiple(self, multiple: bool) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.multiple = multiple
        return self
    
    def table_id(self, table_id: str) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.table_id = table_id
        return self
    
    def table_name(self, table_name: str) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.table_name = table_name
        return self
    
    def back_field_name(self, back_field_name: str) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.back_field_name = back_field_name
        return self
    
    def auto_serial(self, auto_serial: AppFieldPropertyAutoSerial) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.auto_serial = auto_serial
        return self
    
    def location(self, location: AppFieldPropertyLocation) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.location = location
        return self
    
    def formula_expression(self, formula_expression: str) -> "AppTableFieldPropertyBuilder":
        self._app_table_field_property.formula_expression = formula_expression
        return self
    
    def build(self) -> "AppTableFieldProperty":
        return self._app_table_field_property