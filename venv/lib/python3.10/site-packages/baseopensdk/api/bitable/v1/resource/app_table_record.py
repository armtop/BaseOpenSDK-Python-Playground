# Code generated by Lark OpenAPI.

import io
from typing import *
from typing import IO
from baseopensdk.core.const import UTF_8, CONTENT_TYPE
from baseopensdk.core import JSON
from baseopensdk.core.token import verify
from baseopensdk.core.http import Transport
from baseopensdk.core.model import Config, RequestOption, RawResponse
from baseopensdk.core.utils import Files
from requests_toolbelt import MultipartEncoder
from baseopensdk.api.bitable.v1.model.batch_create_app_table_record_request import BatchCreateAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.batch_create_app_table_record_response import BatchCreateAppTableRecordResponse
from baseopensdk.api.bitable.v1.model.batch_delete_app_table_record_request import BatchDeleteAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.batch_delete_app_table_record_response import BatchDeleteAppTableRecordResponse
from baseopensdk.api.bitable.v1.model.batch_update_app_table_record_request import BatchUpdateAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.batch_update_app_table_record_response import BatchUpdateAppTableRecordResponse
from baseopensdk.api.bitable.v1.model.create_app_table_record_request import CreateAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.create_app_table_record_response import CreateAppTableRecordResponse
from baseopensdk.api.bitable.v1.model.delete_app_table_record_request import DeleteAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.delete_app_table_record_response import DeleteAppTableRecordResponse
from baseopensdk.api.bitable.v1.model.get_app_table_record_request import GetAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.get_app_table_record_response import GetAppTableRecordResponse
from baseopensdk.api.bitable.v1.model.list_app_table_record_request import ListAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.list_app_table_record_response import ListAppTableRecordResponse
from baseopensdk.api.bitable.v1.model.update_app_table_record_request import UpdateAppTableRecordRequest
from baseopensdk.api.bitable.v1.model.update_app_table_record_response import UpdateAppTableRecordResponse


class AppTableRecord(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def batch_create(self, request: BatchCreateAppTableRecordRequest, option: RequestOption = RequestOption()) -> BatchCreateAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: BatchCreateAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), BatchCreateAppTableRecordResponse)
        response.raw = resp

        return response

    def batch_delete(self, request: BatchDeleteAppTableRecordRequest, option: RequestOption = RequestOption()) -> BatchDeleteAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: BatchDeleteAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), BatchDeleteAppTableRecordResponse)
        response.raw = resp

        return response

    def batch_update(self, request: BatchUpdateAppTableRecordRequest, option: RequestOption = RequestOption()) -> BatchUpdateAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: BatchUpdateAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), BatchUpdateAppTableRecordResponse)
        response.raw = resp

        return response

    def create(self, request: CreateAppTableRecordRequest, option: RequestOption = RequestOption()) -> CreateAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: CreateAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateAppTableRecordResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteAppTableRecordRequest, option: RequestOption = RequestOption()) -> DeleteAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: DeleteAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteAppTableRecordResponse)
        response.raw = resp

        return response

    def get(self, request: GetAppTableRecordRequest, option: RequestOption = RequestOption()) -> GetAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: GetAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), GetAppTableRecordResponse)
        response.raw = resp

        return response

    def list(self, request: ListAppTableRecordRequest, option: RequestOption = RequestOption()) -> ListAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: ListAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), ListAppTableRecordResponse)
        response.raw = resp

        return response

    def update(self, request: UpdateAppTableRecordRequest, option: RequestOption = RequestOption()) -> UpdateAppTableRecordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: UpdateAppTableRecordResponse = JSON.unmarshal(str(resp.content, UTF_8), UpdateAppTableRecordResponse)
        response.raw = resp

        return response

    
