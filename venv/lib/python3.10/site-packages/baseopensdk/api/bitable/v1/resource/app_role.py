# Code generated by Lark OpenAPI.

import io
from typing import *
from typing import IO
from baseopensdk.core.const import UTF_8, CONTENT_TYPE
from baseopensdk.core import JSON
from baseopensdk.core.token import verify
from baseopensdk.core.http import Transport
from baseopensdk.core.model import Config, RequestOption, RawResponse
from baseopensdk.core.utils import Files
from requests_toolbelt import MultipartEncoder
from baseopensdk.api.bitable.v1.model.create_app_role_request import CreateAppRoleRequest
from baseopensdk.api.bitable.v1.model.create_app_role_response import CreateAppRoleResponse
from baseopensdk.api.bitable.v1.model.delete_app_role_request import DeleteAppRoleRequest
from baseopensdk.api.bitable.v1.model.delete_app_role_response import DeleteAppRoleResponse
from baseopensdk.api.bitable.v1.model.list_app_role_request import ListAppRoleRequest
from baseopensdk.api.bitable.v1.model.list_app_role_response import ListAppRoleResponse
from baseopensdk.api.bitable.v1.model.update_app_role_request import UpdateAppRoleRequest
from baseopensdk.api.bitable.v1.model.update_app_role_response import UpdateAppRoleResponse


class AppRole(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateAppRoleRequest, option: RequestOption = RequestOption()) -> CreateAppRoleResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: CreateAppRoleResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateAppRoleResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteAppRoleRequest, option: RequestOption = RequestOption()) -> DeleteAppRoleResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: DeleteAppRoleResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteAppRoleResponse)
        response.raw = resp

        return response

    def list(self, request: ListAppRoleRequest, option: RequestOption = RequestOption()) -> ListAppRoleResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: ListAppRoleResponse = JSON.unmarshal(str(resp.content, UTF_8), ListAppRoleResponse)
        response.raw = resp

        return response

    def update(self, request: UpdateAppRoleRequest, option: RequestOption = RequestOption()) -> UpdateAppRoleResponse:
        # 鉴权、获取token
        verify(self.config, request, option)
        
        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)
        
        # 反序列化
        response: UpdateAppRoleResponse = JSON.unmarshal(str(resp.content, UTF_8), UpdateAppRoleResponse)
        response.raw = resp

        return response

    
